}
}
z
length(z)
dt<- list()
z<- list()
for (i in settori[-9]){
print(length(dati[dati$Sector==i,1]))
dt[[i]]<- sample(dati[dati$Sector==i,1],10)
for(l in dt[[i]]){
cat("Downloading ", l, " from ",i, "\n")
z[[l]]<-get.hist.quote(instrument=l,start="2003-01-01",end="2008-01-01",
quote= "Close",
retclass = "zoo", quiet = T)
}
}
if (class(result)=='try-error') next
?dimnames
a<-list(c(1,2,3))
dimnames(a)[[1]]<-'ciao'
dimnames(a)[[2]]<-'ciao'
dimnames(a)<-'ciao'
a
a<-list(1,2,3)
dimnames(a)<-'ciao'
a
dimnames(a)[[2]]<-'ciao'
dt<- list()
z<- list()
for (i in settori[-c(1,9)]){
print(length(dati[dati$Sector==i,1]))
dt[[i]]<- sample(dati[dati$Sector==i,1],10)
for(l in dt[[i]]){
cat("Downloading ", l, " from ",i, "\n")
result <- try(z[[l]]<-get.hist.quote(instrument=l,start="2003-01-01",end="2008-01-01",
quote= "Close",
retclass = "zoo", quiet = T))
if (class(result)=='try-error') next
}
}
library(zoo)
write.zoo(z, file = "data/all_sp500_price_data.csv", index.name = "time")
zii=data.frame(a)
View(zii)
b<-data.frame(z)
z
write.zoo(z, file = "data/all_sp500_price_data.csv", index.name = "time")
write.zoo(z, file = "data/all_sp500_price_data.csv")
?write.zoo
load(z,file = 'dati')
save.image("C:/Users/Umbertojunior/Desktop/data science/Firts Semestr/SDS/hw-3/data.RData")
save(z,file = 'dati')
save(z,file = 'dati.RData')
load('dati.RData')
b<-data.frame(z)
z$HRL
?merge
sbo<- merge(z$CAG,z$MMC)
sbo
length(z$CAG)
length(z$MMC)
length(z$OI)
length(z$ED)
length(z$ETR)
length(z$DVN)
for i in names(z):
print(i,length(z[[i]]))
names(z)
for i in names(z):
print(i,length(z[[i]]))
for(i in names(z)){
print(i,length(z[[i]]))
}
for(i in names(z)){
i
print(length(z[[i]]))
}
for(i in names(z)){
print(i)
print(length(z[[i]]))
}
sbo<- merge(z$CAG,z$EXR)
sbo
sb<-list()
sb<-list()
for(i in names(z)){
sb<-merge(sb,z[[i]])
}
View(sb)
View(sigma1)
View(sigma1)
View(sigma2)
View(sigma2)
View(sigma3)
View(sigma3)
View(x3)
View(x3)
View(x3.n)
for(i in names(z)){
sb<-merge(sb,z[[i]])
}
View(sb)
View(sb)
i
z$i
z[[i]]
names(z))[-1]
names(z)[-1]
names(z)
sb<- z[[1]]
for(i in names(z)[-1]{
sb<-merge(sb,z[[i]])
}
for(i in names(z)[-1]){
sb<-merge(sb,z[[i]])
}
for(i in names(z)[-1]) {
sb<-merge(sb,z[[i]])
}
b<-data.frame(sb)
View(b)
names(b)<- names(z)
View(b)
z[[1]]
z[[1]][1]
View(b)
write.zoo(b, file = "data/all_sp500_price_data.csv")
write.zoo(sb, file = "data/all_sp500_price_data.csv")
write.zoo(sb, file = "data/all_sp500_price_data.csv", index.name = "time")
write.zoo(sb, file = "all_sp500_price_data.csv", index.name = "time")
names(sb)<-names(z)
names(b)<- c(time,names(z))
View(b)
names(b)<- names(z)
View(b)
length(names(z))
length(b)
sb<- z[[1]]
for(i in names(z)[-1]) {
sb<-merge(sb,z[[i]])
}
names(sb)<-names(z)
b<-data.frame(sb)
View(b)
length(names(z))
length(b)
write.zoo(sb, file = "all_sp500_price_data.csv", index.name = "time")
View(sb)
cor(sb[1],sb[2])
?cor
cor(sb[1],sb[2], na.remove=T)
cor(sb[1],sb[2], na.rm=T)
cor(sb[1],sb[2], use='all.obs')
cor(sb[1],sb[2], use='complete.obs')
cor(sb,sb, use='complete.obs')
mat<-cor(sb,sb, use='complete.obs')
View(mat)
mat<0.8
mat[mat>0.8]
mt<- cor(sb,sb,use = 'pairwise.complete.obs')
mt
k<- mat[mat>0.8]
k
View(k)
diff(sb[[1]])
typeof(z[[1]])
plot(z[[1]])
diff(z[[1]])
plot(diff(z[[1]]))
df<- diff(z[[1]])
for(i in names(z)[-1]) {
df<-merge(df,diff(z[[i]]))
}
names(df)<-names(z)
df
View(df)
write.zoo(df, file = "all_sp500_diff_data.csv", index.name = "time")
mat<-cor(df,df, use='complete.obs')
mt<- cor(sb,sb,use = 'pairwise.complete.obs')
mat==mt
View(mat)
View(mat)
View(mt)
View(mt)
mt<- cor(df,df,use = 'pairwise.complete.obs')
mat==mt
mat>0.8
mat[mat>0.8]
k<- mat[mat>0.7]
View(k)
k
k<- mat[mat>0.7&mat!=1]
k
mat>0.7&mat!=1
read.csv.zoo(file = "all_sp500_diff_data.csv")
read.csv.zoo(file = "all_sp500_diff_data.csv",index.name = "time")
read.csv(file = "all_sp500_diff_data.csv")
leg<-read.csv(file = "all_sp500_diff_data.csv")
View(leg)
min<-read.zoo(file="all_sp500_diff_data.csv", header=T)
View(min)
# Simulation size
M = 10000
sim.samp <- matrix(NA, nrow = M, ncol = 2)
View(sim.samp)
colnames(sim.samp) <- c("theta", "x")
View(sim.samp)
colnames(sim.samp) <- c("theta", "x")
View(sim.samp)
colnames(sim.samp) <- c("theta","x")
colnames(sim.samp)
View(sim.samp)
View(sim.samp)
set.seed(123)
for (m in 1:M){
# Generate from the marginal of \theta
sim.samp[m,1] <- rnorm(1)
# Generate from the conditional of (x | \theta)
sim.samp[m,2] <- rnorm(1, sim.samp[m,1], 1)
}
c(Mean = mean(sim.samp[,2]), Var = var(sim.samp[,2])) # c(0, 2) in theory
hist(sim.samp[,2], prob = T, col = "orchid", border = "white",
xlab = "x", main = "", breaks = 50)
curve(dnorm(x, 0, sqrt(2)), add = T, col = "purple", lwd = 4)
n= 1e4
n
n= 10000
sim.samp <- matrix(NA, nrow = M, ncol = 7)
colnames(sim.samp) <- c("sigma1","sigma2","tetha**2","x1","x2","y1","y2")
View(sim.samp)
View(sim.samp)
View(sim.samp)
library(mnormt)
sim.samp[i,1,2]<- rmnorm(1,mean = rep(0,2),n = 1)
?rmnorm()
varcov<- matrix(c(1,0,0,1),2,2)
rmnorm(1, c(0,0), varcov)
a,b<-rmnorm(1, c(0,0), varcov)
a<- matrix(NA, nrow = 2, ncol = 2)
a[1,]<-rmnorm(1, c(0,0), varcov)
View(a)
View(a)
a<- matrix(NA, nrow = 2, ncol = 4)
a[1,1:2]<-rmnorm(1, c(0,0), varcov)
View(a)
View(a)
View(sim.samp)
View(sim.samp)
?rnorm
varcov<- matrix(c(1,0,0,1),2,2)
for (i in 1:n){
sim.samp[i,1:2]<- rmnorm(1,c(0,0), varcov)
sim.samp[i,3]<- rnorm(1)
sim.samp[i,4] <- rnorm(1, mean = sim.samp[i,1], sd = sim.samp[i,3])
sim.samp[i,5] <- rnorm(1, mean = sim.samp[i,2], sd = sim.samp[i,3])
sim.samp[i,6] <- rnorm(1, mean = sim.samp[i,1], sd = sim.samp[i,3])
sim.samp[i,7] <- rnorm(1, mean = sim.samp[i,2], sd = sim.samp[i,3])
}
View(sim.samp)
sim.samp <- matrix(NA, nrow = M, ncol = 8)
colnames(sim.samp) <- c("sigma1","sigma2","tetha","x1","x2","y1","y2", "DAG")
varcov<- matrix(c(1,0,0,1),2,2)
?prod()
View(a)
View(a)
prod(a[1,1:2])
a[1,1:2]
for (i in 1:n){
sim.samp[i,1:2]<- rmnorm(1,c(0,0), varcov)
sim.samp[i,3]<- rnorm(1)**2
sim.samp[i,4] <- rnorm(1, mean = sim.samp[i,1], sd = sim.samp[i,3])
sim.samp[i,5] <- rnorm(1, mean = sim.samp[i,2], sd = sim.samp[i,3])
sim.samp[i,6] <- rnorm(1, mean = sim.samp[i,1], sd = sim.samp[i,3])
sim.samp[i,7] <- rnorm(1, mean = sim.samp[i,2], sd = sim.samp[i,3])
sim.samp[i,8] <- prod(sim.samp[i,1:7])
}
View(sim.samp)
View(sim.samp)
?options
options(digits = 3)
View(sim.samp)
View(sim.samp)
sim.samp[[x2]]
ecdf(sim.samp[,4])
plot(ecdf(sim.samp[,4]))
plot(ecdf(sim.samp[,4]),-5,5)
plot(ecdf(sim.samp[,4]))
plot(ecdf(sim.samp[,4]),main='ecdf')
plot(ecdf(sim.samp[,5]),main='ecdf')
plot(ecdf(sim.samp[,6]),main='ecdf')
plot(ecdf(sim.samp[,7]),main='ecdf')
plot(ecdf(sim.samp[,8]),main='ecdf')
abs(-2)
for (i in 1:n){
sim.samp[i,1:2]<- rmnorm(1,c(0,0), varcov)
sim.samp[i,3]<- abs(rnorm(1))
sim.samp[i,4] <- rnorm(1, mean = sim.samp[i,1], sd = sim.samp[i,3])
sim.samp[i,5] <- rnorm(1, mean = sim.samp[i,2], sd = sim.samp[i,3])
sim.samp[i,6] <- rnorm(1, mean = sim.samp[i,1], sd = sim.samp[i,3])
sim.samp[i,7] <- rnorm(1, mean = sim.samp[i,2], sd = sim.samp[i,3])
sim.samp[i,8] <- prod(sim.samp[i,1:7])
}
View(sim.samp)
save(sim.samp,'sim.RData')
save(sim.samp,'simsamp.RData')
save(sim.samp,'s.RData')
save(sim.samp)
?save
save(sim.samp, file = 'sim_samp.RData')
varcov<- matrix(c(1,0,0,1),2,2)
for (i in 1:n){
sim.samp[i,1:2]<- rmnorm(1,c(2,2), varcov)
sim.samp[i,3]<- abs(rnorm(1))
sim.samp[i,4] <- rnorm(1, mean = sim.samp[i,1], sd = sim.samp[i,3])
sim.samp[i,5] <- rnorm(1, mean = sim.samp[i,2], sd = sim.samp[i,3])
sim.samp[i,6] <- rnorm(1, mean = sim.samp[i,1], sd = sim.samp[i,3])
sim.samp[i,7] <- rnorm(1, mean = sim.samp[i,2], sd = sim.samp[i,3])
sim.samp[i,8] <- prod(sim.samp[i,1:7])
}
plot(ecdf(sim.samp[,4]),main='ecdf')
plot(ecdf(sim.samp[,5]),main='ecdf')
varcov<- matrix(c(1,0,0,1),2,2)
for (i in 1:n){
sim.samp[i,1:2]<- rmnorm(1,c(2,7), varcov)
sim.samp[i,3]<- abs(rnorm(1))
sim.samp[i,4] <- rnorm(1, mean = sim.samp[i,1], sd = sim.samp[i,3])
sim.samp[i,5] <- rnorm(1, mean = sim.samp[i,2], sd = sim.samp[i,3])
sim.samp[i,6] <- rnorm(1, mean = sim.samp[i,1], sd = sim.samp[i,3])
sim.samp[i,7] <- rnorm(1, mean = sim.samp[i,2], sd = sim.samp[i,3])
sim.samp[i,8] <- prod(sim.samp[i,1:7])
}
plot(ecdf(sim.samp[,5]),main='ecdf')
plot(ecdf(sim.samp[,4]),main='ecdf')
save(sim.samp, file = 'sim_samp.RData')
var(sim.samp[,4])
var(sim.samp[,5])
plot(ecdf(sim.samp[,8]),main='ecdf')
hist(sim.samp[,8],main = 'DAG distro')
hist(sim.samp[,8],main = 'DAG distro',breaks = 100)
hist(sim.samp[,8],main = 'DAG distro',breaks = 200)
hist(sim.samp[,8],main = 'DAG distro',breaks = 200,outer=F)
mean(sim.samp[,8])
hist(sim.samp[,8],main = 'DAG distro',breaks = 200)
mean(sim.samp[,8])
?sd()
sd(sim.samp[,8])
, add = T, col = "purple", lwd = 4)
curve(dnorm(x,mean(sim.samp[,8]) , sd(sim.samp[,8]), add = T, col = "purple", lwd = 4)
hist(sim.samp[,8],main = 'DAG distro',breaks = 200)
hist(sim.samp[,8],main = 'DAG distro',breaks = 200)
curve(dnorm(x,mean(sim.samp[,8]) , sd(sim.samp[,8]), add = T, col = "purple", lwd = 4)
curve(dnorm(x,mean(sim.samp[,8]) , sd(sim.samp[,8], add = T, col = "purple", lwd = 4)
curve(dnorm(x,mean(sim.samp[,8]) , sd(sim.samp[,8], add = T, col = "purple", lwd = 4)
)
curve(dnorm(x,mean(sim.samp[,8]) , sd(sim.samp[,8])), add = T, col = "purple", lwd = 4)
curve(dnorm(x,mean(sim.samp[,8]) , sd(sim.samp[,8])), add = T, col = "purple", lwd = 4)
mean(sim.samp[,8])
curve(dnorm(x,mean = mean(sim.samp[,8]) , sd = sd(sim.samp[,8])), add = T, col = "purple", lwd = 4)
hist(sim.samp[,8],main = 'DAG distro',breaks = 200)
curve(dnorm(x,mean = mean(sim.samp[,8]) , sd = sd(sim.samp[,8])), add = T, col = "purple", lwd = 4)
sd(sim.samp[,8]))
sd(sim.samp[,8])
require(tseries, quietly = T)
IT = c("ACN", "ATVI", "ADBE", "AKAM", "ADS", "ADI", "AAPL", "AMAT", "ADSK", "ADP", "CA", "CSCO", "CTXS", "CTSH", "EBAY", "EA", "FFIV", "FIS", "FISV", "GPN", "HRS", "HPQ", "INTC", "IBM", "INTU", "JNPR", "KLAC", "LRCX", "LLTC", "MCHP", "MU", "MSFT", "MSI", "NTAP", "NFLX", "NVDA", "ORCL", "PAYX", "QCOM", "RHT", "STX", "SWKS", "SYMC", "TXN", "TSS", "VRSN", "WDC", "XRX", "XLNX", "YHOO")
HE = c("ABT", "AET", "A", "AGN", "ALXN", "ABC", "AMGN", "ANTM", "BCR", "BAX", "BDX", "BIIB", "BSX", "BMY", "CAH", "HSIC", "CELG", "CNC", "CERN", "CI", "DVA", "XRAY", "EW", "ENDP", "ESRX", "GILD", "HOLX", "HUM", "ILMN", "ISRG", "JNJ", "LH", "LLY", "MCK", "MDT", "MRK", "MTD", "MYL", "PDCO", "PKI", "PRGO", "PFE", "DGX", "REGN", "STJ", "SYK", "COO", "TMO", "UNH", "UHS", "VAR", "VRTX", "WAT", "ZBH")
MA = c("APD", "ALB", "AMAT", "AVY", "BLL", "DOW", "DD", "EMN", "ECL", "FMC", "FCX", "GWW", "IP", "IFF", "MLM", "MON", "MOS", "NEM", "NUE", "PPG", "PX", "SEE", "SHW", "VMC")
EN = c("AES", "LNT", "APC", "APA", "BHI", "COG", "CNP", "CHK", "CVX", "XEC", "CMS",  "COP", "DVN", "DTE", "DUK", "EOG", "EQT", "ES", "XOM", "FE", "FTI", "HAL", "HP", "HES", "MRO", "MUR", "NOV", "NFX", "NBL", "OXY", "OKE", "PXD", "RRC", "SLB", "SRE", "SWN", "TSO", "RIG", "VLO", "WEC", "WMB", "XEL")
stocks = c(IT, HE, MA, EN)
n = length(stocks)
n
alpha = 0.05
eps = 0.45
data = matrix(nrow = 1257, ncol = length(stocks))
colnames(data) = stocks
for (i in 1:length(stocks)){
s = get.hist.quote(instrument = stocks[i], start = "2003-01-01", end = "2008-01-01", quote = c("Open", "Close"), provider = "yahoo", drop = T)
data[,i] = diff(log(s$Close))
print(stocks[i])
}
trans = function(x) 1/2*log((1+x)/(1-x))
R = cor(data, method = "pearson")
Z = trans(R)
B = 4000
delta = rep(NA, B)
for (i in 1:B){
data.boot = data[sample(nrow(data), replace = T),]
R.boot = cor(data.boot)
delta[i] = sqrt(n)*max(abs(R.boot-R))
}
F.hat = ecdf(delta)
t.alpha = quantile(F.hat, alpha)
save.image("C:/Users/Umbertojunior/Desktop/data science/Firts Semestr/SDS/hw-3/ej3.RData")
load('ej3.RData')
F.hat = ecdf(delta)
t.alpha = quantile(F.hat, alpha)
L = R-t.alpha/sqrt(n)
U = R+t.alpha/sqrt(n)
put.edges = (L > eps)*1
diag(put.edges) = 0
put.edges
library(igraph)
g = graph.adjacency(put.edges)
for(i in 1:length(stocks)){
if (V(g)$name[i] %in% IT  == T ) V(g)[i]$color = "red"
if (V(g)$name[i] %in% HE  == T ) V(g)[i]$color = "pink"
if (V(g)$name[i] %in% MA  == T ) V(g)[i]$color = "gray"
if (V(g)$name[i] %in% EN  == T ) V(g)[i]$color = "green"
}
plot(g, edge.color="black", vertex.size=7, layout = layout.fruchterman.reingold)
delta
save(data,file = 'datifinanziari.RData')
View(data)
View(data)
plot(data)
plot(data$"DNase")
View(data)
plot(data$ACN)
data
names(data)
view(data)
View(data)
names(data)
colnames(data)
plot(data[[ACN]])
data$ACN
data[[ACN]]
data[['ACN']]
data[[,'ACN']]
data[[,1]]
data[,1]
plot(data[,1])
dic[1]<-get.hist.quote(instrument="AAPL", start="2003-01-01", end="2008-01-01",quote= c("Open","Close"), provider="yahoo", drop=TRUE)
require(tseries, quietly = T)
require(quantmod)
dic[1]<-get.hist.quote(instrument="AAPL", start="2003-01-01", end="2008-01-01",quote= c("Open","Close"), provider="yahoo", drop=TRUE)
plot(dic[1])
dic <- Matrix()
dic[1]<-get.hist.quote(instrument="AAPL", start="2003-01-01", end="2008-01-01",quote= c("Open","Close"), provider="yahoo", drop=TRUE)
dic <- matrix()
dic[1]<-get.hist.quote(instrument="AAPL", start="2003-01-01", end="2008-01-01",quote= c("Open","Close"), provider="yahoo", drop=TRUE)
plot(dic[1])
plot(dic)
dic[1]
dic[,1]<-get.hist.quote(instrument="AAPL", start="2003-01-01", end="2008-01-01",quote= c("Open","Close"), provider="yahoo", drop=TRUE)
dic[1]
data[,1]
length(data[,1])
length(data)
length(data[1,])
h<-get.hist.quote(instrument="AAPL", start="2003-01-01", end="2008-01-01",quote= c("Open","Close"), provider="yahoo", drop=TRUE)
h
diff(h)
plot(diff(h))
plot(diff(h$Close))
plot(data[,1])
h<-get.hist.quote(instrument="ACN", start="2003-01-01", end="2008-01-01",quote= c("Open","Close"), provider="yahoo", drop=TRUE)
plot(diff(h$Close))
diff(h$Close)==data[,1]
log(diff(h$Close))==data[,1]
?diff
diff(1:10, 2)
diff(1:10)
diff(c(1,2,4))
diff(c(1,2,6))
?diff
a<-c(1,2,5)
for (i in 2:length(a)){
l[i-1]<-a[i]/a[i-1]
}
l
a<-c(1,2,5)
for (i in 2:length(a)){
l[i-1]<-log(a[i]/a[i-1])
}
l
e**2
1**2
2**2
e
trans.inv = function(t) (exp(2*t)- 1)/(exp(2*t) + 1)
s<-2
2s
2*s
View(R)
View(Z)
cic<- data
cic[:,:]=0
m<- matrix(c(2,3,4,5),2,2)
?t
diag(m)
diag(m)=0
pr<-data
diag(pr)=0
R = cor(pr, method = "pearson")
Z = trans(R)
View(Z)
View(Z)
View(Z)
View(Z)
View(pr)
View(R)
View(R)
Z = trans(R)
plot(F.hat)
t.alpha
put.edges>0
c<-put.edges>0
c
put.edges[put.edges>0]
z
View(Z)
View(Z[Z>2])
