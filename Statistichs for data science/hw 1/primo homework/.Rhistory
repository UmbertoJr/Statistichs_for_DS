if(z==1){
obs=c(obs,y)
}
}
hist(obs, probability = T)
curve(marginal(x), type= 'l',add = T)
curve(marginal(x), type= 'l',add = T, col='blue')
int2 <- integrate(L2,-Inf,Inf)
X.bar <- c(-1.25, 8.77, 1.18, 10.66, 11.81, -6.09, 3.56, 10.85, 4.03, 2.13)
L2 <- function(thet){
prod=1
for(x in X.bar){
prod = 1/12*prod*(x>=thet-10 & x<=thet+10)
}
return(prod)
}
int2 <- integrate(L2,-Inf,Inf)
prob2 <- function(x) L2(x)/int2$value
curve(prob2, xlab = 'theta', ylab = 'L(theta)', from = 0, to = 10)
pr <- function(thet) dnorm(thet, 0, (-5/qnorm(0.02)))
curve(pr, ylab = 'prior', xlab='theta', from = -10, to = 10)
jnt2 <- function(t) L2(t)*pr(t)
m2.x_bar <- integrate(jnt2, -Inf, Inf)
post2 <- function(t) jnt2(t)/m2.x_bar$value
curv <- function(x) jnt2(x)/int2$value
curve(jnt2, from = 0, to = 10, add = T, col='blue')
curve(curv, from = 0, to = 10, add = T, col='blue')
pr <- function(thet) dnorm(thet, 0, (-5/qnorm(0.02)))
curve(pr, ylab = 'prior', xlab='theta', from = -10, to = 10)
jnt2 <- function(t) L2(t)*pr(t)
m2.x_bar <- integrate(jnt2, -Inf, Inf)
post2 <- function(t) jnt2(t)/m2.x_bar$value
curv <- function(x) jnt2(x)/int2$value
curve(curv, from = 0, to = 10, add = T, col='blue')
curve(post2, from = 0, to = 10, add = T, col='blue')
pr <- function(thet) dnorm(thet, 0, (-5/qnorm(0.02)))
curve(pr, ylab = 'prior', xlab='theta', from = -10, to = 10)
jnt2 <- function(t) L2(t)*pr(t)
m2.x_bar <- integrate(jnt2, -Inf, Inf)
post2 <- function(t) jnt2(t)/m2.x_bar$value
curve(post2, from = 0, to = 10, add = T, col='blue')
?curve
pr <- function(thet) dnorm(thet, 0, (-5/qnorm(0.02)))
jnt2 <- function(t) L2(t)*pr(t)
m2.x_bar <- integrate(jnt2, -Inf, Inf)
post2 <- function(t) jnt2(t)/m2.x_bar$value
curve(post2, from = 0, to = 10, col='blue', from = -10, to = 10)
curve(post2, from = 0, to = 10, col='blue')
pr <- function(thet) dnorm(thet, 0, (-5/qnorm(0.02)))
jnt2 <- function(t) L2(t)*pr(t)
m2.x_bar <- integrate(jnt2, -Inf, Inf)
post2 <- function(t) jnt2(t)/m2.x_bar$value
curve(post2, from = 0, to = 10, col='blue')
curve(pr, ylab = 'prior', xlab='theta', add = T)
pr <- function(thet) dnorm(thet, 0, (-5/qnorm(0.02)))
jnt2 <- function(t) L2(t)*pr(t)
m2.x_bar <- integrate(jnt2, -Inf, Inf)
post2 <- function(t) jnt2(t)/m2.x_bar$value
curve(post2, from = -10, to = 10, col='blue')
curve(pr, ylab = 'prior', xlab='theta', add = T)
prior <- function(t)  1/11 *(t < 1 & t >0)
L <-  function(t) dbinom(57,100,t)
m <- function(all.theta){
su <- 0
for(t in all.theta){
su <- su + prior(t)*L(t)
}
return(su)
}
posterior <- function(t) prior(t)*L(t)
plot(theta ,posterior(theta), ylab = 'posterior')
curve(posterior(x), add = T, col='blue')
?plot
prior <- function(t)  1/11 *(t < 1 & t >0)
L <-  function(t) dbinom(57,100,t)
m <- function(all.theta){
su <- 0
for(t in all.theta){
su <- su + prior(t)*L(t)
}
return(su)
}
posterior <- function(t) prior(t)*L(t)
plot(theta ,posterior(theta), ylab = 'posterior',type = 'p', col ='red')
curve(posterior(x), add = T, col='blue')
all.theta
theta
prior <- function(t)  1/11 *(t < 1 & t >0)
L <-  function(t) dbinom(57,100,t)
m <- function(all.theta){
su <- 0
for(t in all.theta){
su <- su + prior(t)*L(t)
}
return(su)
}
jn <- function(t) prior(t)*L(t)
posterior <- function(t) prior(t)*L(t)/m(all.theta = theta)
plot(theta ,jn(theta), ylab = 'posterior',type = 'p', col ='green', ylab='join and posterior')
prior <- function(t)  1/11 *(t < 1 & t >0)
L <-  function(t) dbinom(57,100,t)
m <- function(all.theta){
su <- 0
for(t in all.theta){
su <- su + prior(t)*L(t)
}
return(su)
}
jn <- function(t) prior(t)*L(t)
posterior <- function(t) prior(t)*L(t)/m(all.theta = theta)
plot(theta ,jn(theta),type = 'p', col ='green', ylab='join and posterior')
plot(theta ,posterior(theta),type = 'p', col ='red')
curve(posterior(x), add = T, col='blue')
prior <- function(t)  1/11 *(t < 1 & t >0)
L <-  function(t) dbinom(57,100,t)
m <- function(all.theta){
su <- 0
for(t in all.theta){
su <- su + prior(t)*L(t)
}
return(su)
}
jn <- function(t) prior(t)*L(t)
posterior <- function(t) prior(t)*L(t)/m(all.theta = theta)
plot(theta ,jn(theta),type = 'p', col ='green', ylab='join and posterior')
plot(theta ,posterior(theta),type = 'p', col ='red', add = T)
curve(posterior(x), add = T, col='blue')
prior <- function(t)  1/11 *(t < 1 & t >0)
L <-  function(t) dbinom(57,100,t)
m <- function(all.theta){
su <- 0
for(t in all.theta){
su <- su + prior(t)*L(t)
}
return(su)
}
jn <- function(t) prior(t)*L(t)
posterior <- function(t) prior(t)*L(t)/m(all.theta = theta)
plot(theta ,jn(theta),type = 'p', col ='green', ylab='join and posterior')
lines(theta ,posterior(theta),type = 'p', col ='red', add = T)
curve(posterior(x), add = T, col='blue')
prior <- function(t)  1/11 *(t < 1 & t >0)
L <-  function(t) dbinom(57,100,t)
m <- function(all.theta){
su <- 0
for(t in all.theta){
su <- su + prior(t)*L(t)
}
return(su)
}
jn <- function(t) prior(t)*L(t)
posterior <- function(t) prior(t)*L(t)/m(all.theta = theta)
plot(theta ,jn(theta),type = 'p', col ='green', ylab='join and posterior')
lines(theta ,posterior(theta),type = 'p', col ='red')
curve(posterior(x), add = T, col='blue')
prior <- function(t)  1/11 *(t < 1 & t >0)
L <-  function(t) dbinom(57,100,t)
m <- function(all.theta){
su <- 0
for(t in all.theta){
su <- su + prior(t)*L(t)
}
return(su)
}
jn <- function(t) prior(t)*L(t)
posterior <- function(t) prior(t)*L(t)/m(all.theta = theta)
plot(theta ,posterior(theta),type = 'p', col ='green', ylab='join and posterior')
lines(theta ,jn(theta),type = 'p', col ='red')
curve(posterior(x), add = T, col='blue')
dbeta(t,1,1)
dbeta(2,1,1)
dbeta(0.2,1,1)
curve(L1, xlab = 'theta', ylab = 'L('+expression(theta)')', from = 0, to = 10)
curve(L1, xlab = 'theta', ylab = 'L('+expression(theta)+')', from = 0, to = 10)
curve(L1, xlab = 'theta', ylab = expression('L(',expression(theta),')'), from = 0, to = 10)
curve(L1, xlab = 'theta', ylab = expression('L(theta')'), from = 0, to = 10)
curve(L1, xlab = 'theta', ylab = expression('L(theta)'), from = 0, to = 10)
curve(L1, xlab = 'theta', ylab = expression(L(theta)), from = 0, to = 10)
curve(L1, xlab = expression(theta), ylab = expression(L(theta)), from = 0, to = 10)
help("par")
prod=1
par(mfrow = c(2,2))
X.bar <- c(-1.25, 8.77, 1.18, 10.66, 11.81, -6.09, 3.56, 10.85, 4.03, 2.13)
L1 <- function(thet){
prod=1
for(x in X.bar){
prod = prod*dnorm(x, mean=thet, sd=sqrt(3))
}
return(prod)
}
int.1 <- integrate(L1,-Inf,Inf)
prob1<-function(x) L1(x)/int.1$value
curve(L1, xlab = expression(theta), ylab = expression(L(theta)), from = 0, to = 10)
pr <- function(thet) dnorm(thet, 0, (-5/qnorm(0.02)))
curve(pr, ylab = 'prior', xlab=expression(theta), from = -10, to = 10)
par(mfrow = c(2,2))
X.bar <- c(-1.25, 8.77, 1.18, 10.66, 11.81, -6.09, 3.56, 10.85, 4.03, 2.13)
L1 <- function(thet){
prod=1
for(x in X.bar){
prod = prod*dnorm(x, mean=thet, sd=sqrt(3))
}
return(prod)
}
int.1 <- integrate(L1,-Inf,Inf)
prob1<-function(x) L1(x)/int.1$value
curve(L1, xlab = expression(theta), ylab = expression(L(theta)), from = 0, to = 10)
pr <- function(thet) dnorm(thet, 0, (-5/qnorm(0.02)))
curve(pr, ylab = 'prior', xlab=expression(theta), from = -10, to = 10)
jnt1 <- function(t) L1(t)*pr(t)
m1.x_bar <- integrate(jnt1, -Inf, Inf)
post1 <- function(t) jnt1(t)/m1.x_bar$value
curve(post1, from = 0, to = 10, ylab = expression(posterior), xlab = expression(theta))
lines(prob1(x),add = T)
X.bar <- c(-1.25, 8.77, 1.18, 10.66, 11.81, -6.09, 3.56, 10.85, 4.03, 2.13)
L2 <- function(thet){
prod=1
for(x in X.bar){
prod = 1/12*prod*(x>=thet-10 & x<=thet+10)
}
return(prod)
}
int2 <- integrate(L2,-Inf,Inf)
prob2 <- function(x) L2(x)/int2$value
curve(prob2, xlab = 'theta', ylab = 'L(theta)', from = 0, to = 10)
par(mfrow = c(2,2))
X.bar <- c(-1.25, 8.77, 1.18, 10.66, 11.81, -6.09, 3.56, 10.85, 4.03, 2.13)
L1 <- function(thet){
prod=1
for(x in X.bar){
prod = prod*dnorm(x, mean=thet, sd=sqrt(3))
}
return(prod)
}
int.1 <- integrate(L1,-Inf,Inf)
prob1<-function(x) L1(x)/int.1$value
curve(L1, xlab = expression(theta), ylab = expression(L(theta)), from = 0, to = 10)
pr <- function(thet) dnorm(thet, 0, (-5/qnorm(0.02)))
curve(pr, ylab = 'prior', xlab=expression(theta), from = -10, to = 10)
jnt1 <- function(t) L1(t)*pr(t)
m1.x_bar <- integrate(jnt1, -Inf, Inf)
post1 <- function(t) jnt1(t)/m1.x_bar$value
curve(post1, from = 0, to = 10, ylab = expression(posterior),
xlab = expression(theta), col='green')
lines(prob1,add = T)
par(mfrow = c(2,2))
X.bar <- c(-1.25, 8.77, 1.18, 10.66, 11.81, -6.09, 3.56, 10.85, 4.03, 2.13)
L1 <- function(thet){
prod=1
for(x in X.bar){
prod = prod*dnorm(x, mean=thet, sd=sqrt(3))
}
return(prod)
}
#int.1 <- integrate(L1,-Inf,Inf)
#prob1<-function(x) L1(x)/int.1$value
curve(L1, xlab = expression(theta), ylab = expression(L(theta)), from = 0, to = 10)
pr <- function(thet) dnorm(thet, 0, (-5/qnorm(0.02)))
curve(pr, ylab = 'prior', xlab=expression(theta), from = -10, to = 10)
jnt1 <- function(t) L1(t)*pr(t)
m1.x_bar <- integrate(jnt1, -Inf, Inf)
post1 <- function(t) jnt1(t)/m1.x_bar$value
curve(post1, from = 0, to = 10, ylab = expression(posterior),
xlab = expression(theta), col='green')
mn <- function(t) t*post1(t)
mean1 <- integrate(mn,-Inf,Inf)
mn <- function(t) t*post1(t)
mean1 <- integrate(mn,-Inf,Inf)
mean1
mn <- function(t) t*post1
mean1 <- integrate(mn,-Inf,Inf)
mn <- function(t) t*post1(t)
mean1 <- integrate(mn,-Inf,Inf)
mean1
mean(X.bar)
un <- integrate(post1,-Inf,Inf)
un
mn <- function(t) t*post1(t)
mean1 <- integrate(mn,-Inf,Inf)
un <- integrate(post1,-Inf,Inf)
mean1
un
par(mfrow=c(2,1))
X.bar <- c(-1.25, 8.77, 1.18, 10.66, 11.81, -6.09, 3.56, 10.85, 4.03, 2.13)
L2 <- function(thet){
prod=1
for(x in X.bar){
prod = 1/12*prod*(x>=thet-10 & x<=thet+10)
}
return(prod)
}
int2 <- integrate(L2,-Inf,Inf)
prob2 <- function(x) L2(x)/int2$value
curve(prob2, xlab = 'theta', ylab = 'L(theta)', from = 0, to = 10)
pr <- function(thet) dnorm(thet, 0, (-5/qnorm(0.02)))
jnt2 <- function(t) L2(t)*pr(t)
m2.x_bar <- integrate(jnt2, -Inf, Inf)
post2 <- function(t) jnt2(t)/m2.x_bar$value
curve(post2, from = -10, to = 10, col='blue',ylab = 'Prior and Posterior')
curve(pr, ylab = 'prior', xlab='theta', add = T)
marginal <- function(x) 1/20*(pnorm((x+10)*sqrt(nu)) - pnorm((x-10)*sqrt(nu)))
bound <- function(x) 0.6 *(x>-30 & x<30)
obs <- c()
for(i in 1:100000){
y <- runif(1,-25,25)
z <- rbinom(1,1,marginal(y)/0.6)
if(z==1){
obs=c(obs,y)
}
}
hist(obs, probability = T)
curve(marginal(x), type= 'l',add = T, col='blue')
curve(density(obs),type= 'l',add = T, col='green')
marginal <- function(x) 1/20*(pnorm((x+10)*sqrt(nu)) - pnorm((x-10)*sqrt(nu)))
bound <- function(x) 0.6 *(x>-30 & x<30)
obs <- c()
for(i in 1:100000){
y <- runif(1,-25,25)
z <- rbinom(1,1,marginal(y)/0.6)
if(z==1){
obs=c(obs,y)
}
}
hist(obs, probability = T)
curve(marginal(x), type= 'l',add = T, col='blue')
d <- density(obs)
curve(d,type= 'l',add = T, col='green')
lines(d,type= 'l',add = T, col='green')
marginal <- function(x) 1/20*(pnorm((x+10)*sqrt(nu)) - pnorm((x-10)*sqrt(nu)))
bound <- function(x) 0.6 *(x>-30 & x<30)
obs <- c()
for(i in 1:100000){
y <- runif(1,-25,25)
z <- rbinom(1,1,marginal(y)/0.6)
if(z==1){
obs=c(obs,y)
}
}
hist(obs, probability = T)
curve(marginal(x), type= 'l',add = T, col='blue')
d <- density(obs)
plot(d,type= 'l',add = T, col='green')
d
marginal <- function(x) 1/20*(pnorm((x+10)*sqrt(nu)) - pnorm((x-10)*sqrt(nu)))
bound <- function(x) 0.6 *(x>-30 & x<30)
obs <- c()
for(i in 1:100000){
y <- runif(1,-25,25)
z <- rbinom(1,1,marginal(y)/0.6)
if(z==1){
obs=c(obs,y)
}
}
hist(obs, probability = T)
curve(marginal(x), type= 'l',add = T, col='blue')
d <- density(obs)
curve(d,type= 'l',add = T, col='green')
marginal <- function(x) 1/20*(pnorm((x+10)*sqrt(nu)) - pnorm((x-10)*sqrt(nu)))
bound <- function(x) 0.6 *(x>-30 & x<30)
obs <- c()
for(i in 1:100000){
y <- runif(1,-25,25)
z <- rbinom(1,1,marginal(y)/0.6)
if(z==1){
obs=c(obs,y)
}
}
hist(obs, probability = T)
curve(marginal(x), type= 'l',add = T, col='blue')
d <- density(obs)
lines(d,type= 'l',add = T, col='green')
marginal <- function(x) 1/20*(pnorm((x+10)*sqrt(nu)) - pnorm((x-10)*sqrt(nu)))
bound <- function(x) 0.6 *(x>-30 & x<30)
obs <- c()
for(i in 1:100000){
y <- runif(1,-25,25)
z <- rbinom(1,1,marginal(y)/0.6)
if(z==1){
obs=c(obs,y)
}
}
hist(obs, probability = T)
curve(marginal(x), type= 'l',add = T, col='blue')
d <- density(obs)
lines(d,type= 'l', col='green')
marginal <- function(x) 1/20*(pnorm((x+10)*sqrt(nu)) - pnorm((x-10)*sqrt(nu)))
bound <- function(x) 0.6 *(x>-30 & x<30)
obs <- c()
for(i in 1:100000){
y <- runif(1,-25,25)
z <- rbinom(1,1,marginal(y)/0.6)
if(z==1){
obs=c(obs,y)
}
}
hist(obs, probability = T)
curve(marginal(x), type= 'l',add = T, col='blue')
d <- density(obs)
lines(d,type= 'l', col='green')
legend(15,.4,c('prior predictive','Kernel of obs'), lty = c(1,1),col=c('blue','green'), lwd = c(2.5,2.5))
legend(15,0.04,c('prior predictive','Kernel of obs'), lty = c(1,1),col=c('blue','green'), lwd = c(2.5,2.5))
marginal <- function(x) 1/20*(pnorm((x+10)*sqrt(nu)) - pnorm((x-10)*sqrt(nu)))
bound <- function(x) 0.6 *(x>-30 & x<30)
obs <- c()
for(i in 1:100000){
y <- runif(1,-25,25)
z <- rbinom(1,1,marginal(y)/0.6)
if(z==1){
obs=c(obs,y)
}
}
hist(obs, probability = T)
curve(marginal(x), type= 'l',add = T, col='blue')
d <- density(obs)
lines(d,type= 'l', col='green')
legend(15,0.04,c('prior predictive','Kernel of obs'), lty = c(1,1),col=c('blue','green'), lwd = c(2.5,2.5))
marginal <- function(x) 1/20*(pnorm((x+10)*sqrt(nu)) - pnorm((x-10)*sqrt(nu)))
bound <- function(x) 0.6 *(x>-30 & x<30)
obs <- c()
for(i in 1:100000){
y <- runif(1,-25,25)
z <- rbinom(1,1,marginal(y)/0.6)
if(z==1){
obs=c(obs,y)
}
}
hist(obs, probability = T)
curve(marginal(x), type= 'l',add = T, col='blue')
d <- density(obs)
lines(d,type= 'l', col='green')
legend(10,0.05,c('prior predictive','Kernel of obs'), lty = c(1,1),col=c('blue','green'), lwd = c(2.5,2.5))
?legend
marginal <- function(x) 1/20*(pnorm((x+10)*sqrt(nu)) - pnorm((x-10)*sqrt(nu)))
bound <- function(x) 0.6 *(x>-30 & x<30)
obs <- c()
for(i in 1:100000){
y <- runif(1,-25,25)
z <- rbinom(1,1,marginal(y)/0.6)
if(z==1){
obs=c(obs,y)
}
}
hist(obs, probability = T)
curve(marginal(x), type= 'l',add = T, col='blue')
d <- density(obs)
lines(d,type= 'l', col='green')
legend(10,0.05,c('prior predictive','Kernel of obs'), lty = c(1,1),
col=c('blue','green'), lwd = c(2.5,2.5),fill = T)
marginal <- function(x) 1/20*(pnorm((x+10)*sqrt(nu)) - pnorm((x-10)*sqrt(nu)))
bound <- function(x) 0.6 *(x>-30 & x<30)
obs <- c()
for(i in 1:100000){
y <- runif(1,-25,25)
z <- rbinom(1,1,marginal(y)/0.6)
if(z==1){
obs=c(obs,y)
}
}
hist(obs, probability = T)
curve(marginal(x), type= 'l',add = T, col='blue')
d <- density(obs)
lines(d,type= 'l', col='green')
legend(5,0.065,c('prior predictive','Kernel of obs'), lty = c(1,1),
col=c('blue','green'), lwd = c(2.5,2.5))
marginal <- function(x) 1/20*(pnorm((x+10)*sqrt(nu)) - pnorm((x-10)*sqrt(nu)))
bound <- function(x) 0.6 *(x>-30 & x<30)
obs <- c()
for(i in 1:100000){
y <- runif(1,-25,25)
z <- rbinom(1,1,marginal(y)/0.6)
if(z==1){
obs=c(obs,y)
}
}
hist(obs, probability = T)
curve(marginal(x), type= 'l',add = T, col='blue')
d <- density(obs)
lines(d,type= 'l', col='green')
legend(8,0.05,c('prior predictive','Kernel of obs'), lty = c(1,1),
col=c('blue','green'), lwd = c(2.5,2.5),cex = 0.75)
marginal <- function(x) 1/20*(pnorm((x+10)*sqrt(nu)) - pnorm((x-10)*sqrt(nu)))
bound <- function(x) 0.6 *(x>-30 & x<30)
obs <- c()
for(i in 1:100000){
y <- runif(1,-25,25)
z <- rbinom(1,1,marginal(y)/0.6)
if(z==1){
obs=c(obs,y)
}
}
hist(obs, probability = T)
curve(marginal(x), type= 'l',add = T, col='blue')
d <- density(obs)
lines(d,type= 'l', col='green')
legend(8.6,0.05,c('prior predictive','Kernel of obs'), lty = c(1,1),
col=c('blue','green'), lwd = c(2.5,2.5),cex = 0.75)
marginal <- function(x) 1/20*(pnorm((x+10)*sqrt(nu)) - pnorm((x-10)*sqrt(nu)))
bound <- function(x) 0.6 *(x>-30 & x<30)
obs <- c()
for(i in 1:100000){
y <- runif(1,-25,25)
z <- rbinom(1,1,marginal(y)/0.6)
if(z==1){
obs=c(obs,y)
}
}
hist(obs, probability = T)
curve(marginal(x), type= 'l',add = T, col='blue')
d <- density(obs)
lines(d,type= 'l', col='green')
legend(8.3,0.05,c('prior predictive','Kernel of obs'), lty = c(1,1),
col=c('blue','green'), lwd = c(2.5,2.5),cex = 0.75)
